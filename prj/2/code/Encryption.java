import java.util.ArrayList;

/**
 * Super Class for the encryption classes
 * @author Jason Wilson
 *
 */
abstract class Encryption {
	private long[] key;
	private ArrayList<Integer> key2;
	private String encryptedText;
	private String decryptedText;

	/**
	 * @return The primary key for number to be decrypted
	 */
	public long[] getKey() {
		return key;
	}

	/**
	 * @param key Set the primary key for encryption/decryption
	 */
	public void setKey(long[] key) {
		this.key = key;
	}
	
	/**
	 * @return Encrypted text as a string
	 */
	public String getEncryptedText() {
		return encryptedText;
	}

	/**
	 * @return Readable text that has been decrypted or to be decrypted
	 */
	public String getDecryptedText() {
		return decryptedText;
	}

	/**
	 * @param textToEncrypt String to be encrypted/decrypted
	 */
	public void setDecryptedText(String decryptedText) {
		this.decryptedText = decryptedText;
	}

	/**
	 * @param encryptedText Encrypted text generated by program
	 */
	public void setEncryptedText(String encryptedText) {
		this.encryptedText = encryptedText;
	}

	/**
	 * @return Second set of random numbers to use for decryption
	 */
	public ArrayList<Integer> getKey2() {
		return key2;
	}

	/**
	 * Use only for decyption
	 * @param key2 Sets key2
	 */
	public void setKey2(ArrayList<Integer> key2) {
		this.key2 = key2;
	}
	
	public void resetKey2() {
		key2.clear();
	}
}
